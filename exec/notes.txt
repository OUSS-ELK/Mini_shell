The structures:
	- t_token: holds static data = parsed command structure eg. ccmd tokens, redirections, pipes. It's fixed at parse time, doesn't change
				during execution.
	- t_exec:  manages context that changes as commands run. eg. env vars (updating PATH), fds for pipes and redirections etc..

Without t_exec i'll have to: use global vars, pass +10 params to each func. It's gonna be a disaster.


*** process completion status macros ***
	The most common macros include: 
WIFEXITED(status): Returns non-zero if the child process terminated normally with exit or _exit.
WEXITSTATUS(status): Returns the low-order 8 bits of the exit status if WIFEXITED is true.
WIFSIGNALED(status): Returns non-zero if the child process terminated because it received a signal that was not handled.
WTERMSIG(status): Returns the signal number that caused the termination, if WIFSIGNALED is true.
WIFCONTINUED(status): Returns non-zero if the status returned was from a child process that has continued from a job control stop.

*************

*** STD Shell Exit Codes ***
0 = success
1 = general error
126 = permission denied (cmd found but not exec)
127 = cmd not found (binary doesnt exist)
128+n = cmd terminated by a signal

*************


errno = global var set by system calls like execve, open etc.. when they fail. It tells you why the error happened.
MACROS:
ENOENT = Error No Entry = No such file or directory
			System couldn't find the file or cmd you gave It
EACCES = Error Access = Permission denied
			File or path exists but no perms to execute it


*****


HEREDOCS:
	